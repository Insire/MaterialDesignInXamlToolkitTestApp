<metro:MetroWindow x:Class="TestApp.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                   xmlns:local="clr-namespace:TestApp"
                   xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
                   xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                   Title="MainWindow"
                   Width="525"
                   Height="300"
                   Background="{DynamicResource MaterialDesignPaper}"
                   BorderThickness="0"
                   FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
                   GlowBrush="Black"
                   LeftWindowCommandsOverlayBehavior="Flyouts"
                   ResizeMode="CanResizeWithGrip"
                   RightWindowCommandsOverlayBehavior="Flyouts"
                   SaveWindowPosition="True"
                   TextElement.FontSize="14"
                   TextElement.FontWeight="Medium"
                   TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                   TitleCaps="False"
                   WindowStartupLocation="CenterScreen"
                   WindowTransitionsEnabled="True">
    <metro:MetroWindow.Resources>
        <local:ViewModel x:Key="vmLogin" />
        <local:ViewModel x:Key="vmTest" />

        <ControlTemplate x:Key="Result">
            <TextBlock Margin="5" Text="{Binding Result}" />
        </ControlTemplate>

        <ControlTemplate x:Key="IsBusy">
            <materialDesign:Card Grid.Row="5"
                                 Grid.Column="0"
                                 Margin="12,12,12,12"
                                 Padding="4"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 UniformCornerRadius="14">
                <ProgressBar HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             IsIndeterminate="True"
                             Style="{StaticResource MaterialDesignCircularProgressBar}"
                             Value="0" />
            </materialDesign:Card>
        </ControlTemplate>
        <ControlTemplate x:Key="CheckedContent">
            <TextBlock Text="This is not visible, due to failing ElementBinding" />
        </ControlTemplate>

    </metro:MetroWindow.Resources>
    <metro:MetroWindow.TitleTemplate>
        <DataTemplate>
            <TextBlock Margin="8,0,0,0"
                       VerticalAlignment="Center"
                       DataContext="{StaticResource vmLogin}"
                       FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
                       TextElement.FontSize="14"
                       TextElement.FontWeight="Medium">
                <Run Text="Name" />
                <Run Text="@" />
                <Run Text="{Binding SelectedItem.Name, UpdateSourceTrigger=PropertyChanged}" />
            </TextBlock>
        </DataTemplate>
    </metro:MetroWindow.TitleTemplate>

    <metro:MetroWindow.Flyouts>
        <metro:FlyoutsControl>
            <metro:Flyout Width="300"
                          AnimateOpacity="True"
                          CloseButtonIsCancel="True"
                          Header="Login"
                          Position="Right">

                <Grid Margin="8">
                    <materialDesign:PopupBox HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             DataContext="{StaticResource vmLogin}"
                                             PlacementMode="LeftAndAlignMiddles"
                                             Style="{DynamicResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                             ToolTip="PopupBox, Style MaterialDesignMultiFloatingActionAccentPopupBox">
                        <materialDesign:PopupBox.ToggleCheckedContent>
                            <materialDesign:PackIcon Width="24"
                                                     Height="24"
                                                     Kind="Pencil" />
                        </materialDesign:PopupBox.ToggleCheckedContent>
                        <ListBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ListBox>
                    </materialDesign:PopupBox>
                </Grid>
            </metro:Flyout>

            <metro:Flyout Width="300"
                          Header="Test"
                          Position="Right">

                <DockPanel Margin="8">
                    <materialDesign:PopupBox HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             DataContext="{StaticResource vmTest}"
                                             PlacementMode="LeftAndAlignMiddles"
                                             Style="{DynamicResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                             ToolTip="PopupBox, Style MaterialDesignMultiFloatingActionAccentPopupBox">
                        <materialDesign:PopupBox.ToggleCheckedContent>
                            <materialDesign:PackIcon Width="24"
                                                     Height="24"
                                                     Kind="Pencil" />
                        </materialDesign:PopupBox.ToggleCheckedContent>
                        <ListBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ListBox>
                    </materialDesign:PopupBox>
                </DockPanel>
            </metro:Flyout>

            <metro:Flyout Width="300"
                          Header="Icons"
                          Position="Right">
                <StackPanel Orientation="Vertical">
                    <ToggleButton x:Name="ZoomToggle" Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}">
                        <ToggleButton.Resources>
                            <ControlTemplate x:Key="Checked">
                                <icons:PackIconMaterial Kind="MagnifyPlus" />
                            </ControlTemplate>
                            <ControlTemplate x:Key="UnChecked">
                                <icons:PackIconMaterial Foreground="Red" Kind="MagnifyMinus" />
                            </ControlTemplate>
                        </ToggleButton.Resources>

                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Setter Property="Margin" Value="4" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ZoomToggle, Path=IsChecked}" Value="True">
                                            <Setter Property="Template" Value="{StaticResource Checked}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=ZoomToggle, Path=IsChecked}" Value="False">
                                            <Setter Property="Template" Value="{StaticResource UnChecked}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </ToggleButton>

                    <icons:PackIconMaterial>
                        <icons:PackIconMaterial.Style>
                            <Style TargetType="{x:Type icons:PackIconMaterial}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="4" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ZoomToggle, Path=IsChecked}" Value="True">
                                        <Setter Property="Kind" Value="Play" />
                                        <Setter Property="Foreground" Value="Blue" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=ZoomToggle, Path=IsChecked}" Value="False">
                                        <Setter Property="Kind" Value="Stop" />
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </icons:PackIconMaterial.Style>
                    </icons:PackIconMaterial>
                </StackPanel>
            </metro:Flyout>

        </metro:FlyoutsControl>
    </metro:MetroWindow.Flyouts>
    <metro:MetroWindow.RightWindowCommands>
        <metro:WindowCommands ShowSeparators="False">
            <Button Click="Login_Button_Click">
                <materialDesign:PackIcon Kind="Account" />
            </Button>

            <Button Click="Test_Button_Click">
                <materialDesign:PackIcon Kind="TestTube" />
            </Button>

            <Button Click="Zoom_Button_Click">
                <icons:PackIconMaterial Kind="Magnify" />
            </Button>
        </metro:WindowCommands>
    </metro:MetroWindow.RightWindowCommands>

    <materialDesign:TransitioningContent>
        <materialDesign:TransitioningContent.OpeningEffects>
            <materialDesign:TransitionEffect Kind="FadeIn" />
        </materialDesign:TransitioningContent.OpeningEffects>
        <DockPanel Margin="5"
                   DataContext="{StaticResource vmLogin}"
                   LastChildFill="True">
            <UniformGrid Columns="2" DockPanel.Dock="Top">
                <Button Command="{Binding WorkCommand}" Content="Run" />
                <Button Command="{Binding WorkResultCommand}" Content="Run (Result)" />

                <ToggleButton x:Name="DetailViewToggleButton" Style="{StaticResource MaterialDesignActionToggleButton}">
                    <ToggleButton.Content>
                        <materialDesign:PackIcon Kind="FormatListNumbers" />
                    </ToggleButton.Content>
                    <materialDesign:ToggleButtonAssist.OnContent>
                        <materialDesign:PackIcon Kind="Settings" />
                    </materialDesign:ToggleButtonAssist.OnContent>
                </ToggleButton>
            </UniformGrid>

            <Button Command="{Binding CancelCommand}"
                    Content="Cancel"
                    DockPanel.Dock="Bottom" />

            <ContentControl>
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Style.Triggers>

                            <DataTrigger Binding="{Binding IsBusy, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="Template" Value="{StaticResource IsBusy}" />
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsBusy}" Value="False" />
                                    <Condition Binding="{Binding IsChecked, ElementName=DetailViewToggleButton}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Template" Value="{StaticResource Result}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsBusy}" Value="False" />
                                    <Condition Binding="{Binding IsChecked, ElementName=DetailViewToggleButton}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Template" Value="{StaticResource CheckedContent}" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

        </DockPanel>
    </materialDesign:TransitioningContent>

</metro:MetroWindow>
